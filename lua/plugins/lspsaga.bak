return {
	'glepnir/lspsaga.nvim', -- LSP UIs	
	dependencies = { "kyazdani42/nvim-web-devicons" }, -- File icons
	config = function()
		local status, saga = pcall(require, "lspsaga")
		if (not status) then return end
		local icon_status, icons = pcall(require, "nvim-web-devicons")
		if (not icon_status) then return end

		icons.setup {
		-- your personnal icons can go here (to override)
		-- DevIcon will be appended to `name`
			override = {
			},
		-- globally enable default icons (default to false)
		-- will get overriden by `get_icons` option
			default = false;
		}

		saga.setup({
			ui = {
				winblend = 10,
				border = 'rounded',
				colors = {
					normal_bg = '#002b36'
				}
			},
		})

		vim.g.lspsaga_codeaction_icon = ""
		local opts = { noremap = true, silent = true }
		vim.keymap.set('n', '<C-j>', '<Cmd>Lspsaga diagnostic_jump_next<CR>', opts)
		vim.keymap.set('n', 'gl', '<Cmd>Lspsaga show_diagnostic<CR>', opts)
		vim.keymap.set('n', 'K', '<Cmd>Lspsaga hover_doc<CR>', opts)
		vim.keymap.set('n', 'gd', '<Cmd>Lspsaga lsp_finder<CR>', opts)
		vim.keymap.set('i', '<C-k>', '<Cmd>Lspsaga signature_help<CR>', opts)
		-- vim.keymap.set('i', '<C-k>', '<cmd>lua vim.lsp.buf.signature_help()<CR>', opts)
		vim.keymap.set('n', 'gp', '<Cmd>Lspsaga peek_definition<CR>', opts)
		vim.keymap.set('n', 'gr', '<Cmd>Lspsaga rename<CR>', opts)
		-- code action
		-- local codeaction = require("lspsaga.codeaction")
		-- vim.keymap.set("n", "<leader>ca", function() codeaction:code_action() end, { silent = true })
		-- vim.keymap.set("v", "<leader>ca", function()
		-- 	vim.fn.feedkeys(vim.api.nvim_replace_termcodes("<C-U>", true, false, true))
		-- 	codeaction:range_code_action()
		-- end, { silent = true })

end
}
